<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	
	<!-- 
		載入property並且開啟 ${...} loader，在spring管理的bean下 @Value("${...}") 將會自動注入設定的值 
		PS:spring子容器管理的bean吃不到註冊的 property (如springMVC容器)
	-->
	<!-- 寫法1 推薦寫法 -->
	<context:property-placeholder location="classpath:Config.properties"/>
	<!-- 寫法2
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="classpath:Config.properties"
	/>
	-->


	<!-- 載入其它已定義的spring相關xml檔案 -->
	<!-- 深入應用 see >>> http://blog.csdn.net/kkdelta/article/details/5507799 -->
	<import resource="datasource.xml"/>	


	<!-- 掃描 com 套件下，有被相關標註（Annotation）設定為元件的類別 -->
	<context:component-scan base-package="com">
		<!-- 排除指定型態還有類別的掃描方式 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
</beans>
